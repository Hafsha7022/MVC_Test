@model New_MVC.Models.MainEmployee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div class="modal fade" id="ViewData">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>

@using (Html.BeginForm("AddData", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MainEmployee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmpDetail.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.EmpDetail.Gender, "Male") Male
                @Html.RadioButtonFor(model => model.EmpDetail.Gender, "Female") Female<br />
                @Html.ValidationMessageFor(model => model.EmpDetail.City, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewBag.CountryList != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.EmpDetail.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.EmpDetail.Emp_Country.CId, ViewBag.CountryList as SelectList, "-- Select Country --", new { @class = "form-control", @id = "CId" })
                    @Html.ValidationMessageFor(model => model.EmpDetail.Country, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.EmpDetail.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.EmpDetail.Emp_State.SId, new SelectList(""), "-- Select State --", new { @class = "form-control", @id = "SId" })
                @Html.ValidationMessageFor(model => model.EmpDetail.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpDetail.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.EmpDetail.Emp_City.CityId, new SelectList(""), "-- Select City --", new { @class = "form-control", @id = "CityId" })
                @Html.ValidationMessageFor(model => model.EmpDetail.City, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.EmpDetail.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @*@{
                    List<Type> Hobby_Str = ViewBag.Hobby_Emp;

                    @foreach (var item in ViewBag.Hobby_Emp)
                    {
                        @Html.CheckBoxFor(item.Text)
                    }*@
                @*List<string> Hobby_Str = ViewBag.Hobby_Emp;
                    for (int i = 0; i < Hobby_Str.Count; i++)
                    {
                        @Html.CheckBox(Hobby_Str[i])
                    }*@
                @*@if (@Model.EmpDetail.Emp_Hobby != null)
                    {
                        foreach (var item in Model.EmpDetail.Emp_Hobby)
                        {
                            @Html.CheckBoxFor(x => item.IsChecked);
                            @Html.HiddenFor(x => item.Id)
                            @Html.HiddenFor(x => item.Hobby)
                        }
                    }*@

                @for (int i = 0; i < Model.EmpDetail.Emp_Hobby.Count; i++)
                {
                    @Html.CheckBoxFor(x => x.EmpDetail.Emp_Hobby[i].IsChecked);
                    @Model.EmpDetail.Emp_Hobby[i].Hobby;
                    @Html.HiddenFor(Model => Model.EmpDetail.Emp_Hobby[i].Id);
                    @Html.HiddenFor(Model => Model.EmpDetail.Emp_Hobby[i].Hobby);
                    <br />
                }
                @*}*@
                @Html.ValidationMessageFor(model => model.EmpDetail.Hobbies, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
    <a href="@Url.Action("_View","Home")" class=" btn-success btn-sm" type="button" data-toggle="modal" data-target="#ViewData">View Data</a>
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    /*const { post } = require("jquery");*/


    $(document).ready(function () {
        $("#CId").change(function () {
            var countryId = $(this).val();
            debugger
            $.ajax({
                type: "post",
                url: "/Home/GetStateList?Cid=" + countryId,
                contentType: "html",
                success: function (response) {
                    debugger
                    $("#SId").empty();
                    $("#SId").append(response);
                }
            })
        })

        $("#SId").change(function () {
            var StateId = $(this).val();
            debugger
            $.ajax({
                type: "post",
                url: "/Home/GetCityList?Sid=" + StateId,
                contentType: "html",
                success: function (response) {
                    debugger
                    $("#CityId").empty();
                    $("#CityId").append(response);
                }
            })
        })
    })
</script>